# Generated by Django 5.1.3 on 2025-01-15 11:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, verbose_name='Название пункта')),
                ('name_ru', models.CharField(max_length=140, null=True, verbose_name='Название пункта')),
                ('name_en', models.CharField(max_length=140, null=True, verbose_name='Название пункта')),
                ('name_uk', models.CharField(max_length=140, null=True, verbose_name='Название пункта')),
            ],
            options={
                'verbose_name': 'Пункт для плана',
                'verbose_name_plural': 'Пункт для плана',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlanDuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveSmallIntegerField(verbose_name='Длительность плана в месяцах')),
            ],
            options={
                'verbose_name': 'Длительность плана',
                'verbose_name_plural': 'Длительность планов',
                'ordering': ['duration'],
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Название вопроса')),
                ('name_ru', models.CharField(max_length=120, null=True, verbose_name='Название вопроса')),
                ('name_en', models.CharField(max_length=120, null=True, verbose_name='Название вопроса')),
                ('name_uk', models.CharField(max_length=120, null=True, verbose_name='Название вопроса')),
                ('answer', models.TextField(max_length=240, verbose_name='Ответ на вопрос')),
                ('answer_ru', models.TextField(max_length=240, null=True, verbose_name='Ответ на вопрос')),
                ('answer_en', models.TextField(max_length=240, null=True, verbose_name='Ответ на вопрос')),
                ('answer_uk', models.TextField(max_length=240, null=True, verbose_name='Ответ на вопрос')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название сервиса')),
                ('name_ru', models.CharField(max_length=30, null=True, verbose_name='Название сервиса')),
                ('name_en', models.CharField(max_length=30, null=True, verbose_name='Название сервиса')),
                ('name_uk', models.CharField(max_length=30, null=True, verbose_name='Название сервиса')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг сервиса')),
                ('description', models.TextField(max_length=150, verbose_name='Описание сервиса')),
                ('description_ru', models.TextField(max_length=150, null=True, verbose_name='Описание сервиса')),
                ('description_en', models.TextField(max_length=150, null=True, verbose_name='Описание сервиса')),
                ('description_uk', models.TextField(max_length=150, null=True, verbose_name='Описание сервиса')),
                ('image', models.ImageField(upload_to='images', verbose_name='Картинка сервиса')),
                ('color', models.CharField(max_length=16, verbose_name='Цвет сервиса')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionBid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания заявки')),
                ('username', models.CharField(max_length=64, verbose_name='Имя пользователя подававшего на заявку')),
                ('email', models.EmailField(max_length=64, verbose_name='E-mail пользователя подававшего на заявку')),
                ('phone', models.CharField(max_length=12, verbose_name='Телефон пользователя подававшего на заявку')),
            ],
            options={
                'verbose_name': 'Заявка на подписку',
                'verbose_name_plural': 'Заявки на подписки',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название плана')),
                ('name_ru', models.CharField(max_length=20, null=True, verbose_name='Название плана')),
                ('name_en', models.CharField(max_length=20, null=True, verbose_name='Название плана')),
                ('name_uk', models.CharField(max_length=20, null=True, verbose_name='Название плана')),
                ('price', models.PositiveSmallIntegerField(verbose_name='Стоимость плана')),
                ('clauses', models.ManyToManyField(to='backend.clause', verbose_name='Пункты для плана')),
                ('duration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.planduration', verbose_name='Длительность плана')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='backend.services', verbose_name='Сервис')),
            ],
            options={
                'verbose_name': 'План',
                'verbose_name_plural': 'Планы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания подписки')),
                ('status', models.BooleanField(default=False, verbose_name='Статус подписки')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.plan', verbose_name='План подписки')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='Эл. почта пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('subscriptions', models.ManyToManyField(blank=True, to='backend.subscription', verbose_name='Подписки пользователя')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
